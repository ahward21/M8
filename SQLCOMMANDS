SELECT name FROM movies.movie WHERE year = 2000

---- 2
SELECT m.year, m.name
FROM movies.movie AS m
JOIN movies.genre AS g ON m.mid = g.mid
WHERE g.genre = 'Drama';
-----3
SELECT year, COUNT(*) AS num_movies
FROM movies.movie
GROUP BY year;
----4
SELECT a.role
FROM movies.person AS p
JOIN movies.acts AS a ON p.pid = a.pid
WHERE p.name = 'Bruce Willis';
----5 
SELECT COUNT(*) FROM movies.person;
---6 
SELECT name, year
FROM movies.movie
WHERE rating BETWEEN 8.7 AND 9.0;
---7 
SELECT name, COUNT(DISTINCT name) AS num_actors
FROM movies.movie
GROUP BY name;
-- NOTE for 7, it returns 249 rows, not 251 as the ex says it should, this is due to 2 pieces of NULL data, can be seen by the command below
SELECT *
FROM movies.movie
WHERE name IS NULL;
---8 (this one was solid)
SELECT DISTINCT movie.name
FROM movies.movie
WHERE movie.mid IN (
    SELECT DISTINCT acts.mid
    FROM movies.acts
    WHERE acts.role LIKE 'Dr.%'
);
---9
-- this one is weird, it said 1 row with value 2867 in excercise but there is 3279 actors...code is correct i think since 1 row is returned 
SELECT COUNT(DISTINCT pid) FROM ACTS
--10
SELECT language.language, COUNT(DISTINCT language.mid) as NumberOfMovies
FROM language 
GROUP BY language
SORT BY language 

--PART 2
---19
SET search_path TO dab_dda22232b_95;

CREATE TABLE teacher (
    teacher_id INTEGER PRIMARY KEY, 
    teacher_name VARCHAR(50) 
);

CREATE TABLE course (
    course_code VARCHAR(10) PRIMARY KEY, 
    course_name VARCHAR(50)
);

CREATE TABLE quarter (
    year INTEGER, 
    quarter INTEGER, 
    start_month VARCHAR(10), 
    end_month VARCHAR(10),
    PRIMARY KEY (year, quarter)
);

CREATE TABLE nofstudents (
    teacher_id INTEGER, 
    course_code VARCHAR(10), 
    year INTEGER, 
    quarter INTEGER,
    nofstudents INTEGER,
    FOREIGN KEY (teacher_id) REFERENCES teacher(teacher_id),
    FOREIGN KEY (course_code) REFERENCES course(course_code),
    FOREIGN KEY (year, quarter) REFERENCES quarter(year, quarter)
);
--20 

INSERT INTO dab_dda22232b_95.course (course_code, course_name)
SELECT DISTINCT course_code, course
FROM srs.courses;

INSERT INTO dab_dda22232b_95.quarter (year, quarter, start_month, end_month)
SELECT DISTINCT year, quarter,
    CASE quarter
        WHEN 1 THEN 'September'
        WHEN 2 THEN 'November'
        WHEN 3 THEN 'January'
        WHEN 4 THEN 'March'
        ELSE NULL
    END AS start_month,
    CASE quarter
        WHEN 1 THEN 'November'
        WHEN 2 THEN 'January'
        WHEN 3 THEN 'March'
        WHEN 4 THEN 'May'
        ELSE NULL
    END AS end_month
FROM srs.education;

INSERT INTO dab_dda22232b_95.teacher (teacher_id, teacher_name)
SELECT DISTINCT teacher_id, teacher
FROM srs.education;

INSERT INTO dab_dda22232b_95.nofstudents (teacher_id, course_code, year, quarter, nofstudents)
SELECT education.teacher_id, grades.course_code, grades.year, grades.quarter, COUNT(grades.student_id) AS nofstudents 
FROM srs.grades 
JOIN srs.education ON grades.course_code = education.course_code 
AND grades.year = education.year 
AND grades.quarter = education.quarter 
GROUP BY education.teacher_id, grades.course_code, grades.year, grades.quarter;

